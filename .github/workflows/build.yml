name: Build Moonlight Qt

# 触发条件：创建符合 v* 格式的标签，或基于此类标签的发布
on:
  push:
    tags:
      - 'v*'  # 匹配 v1.0.0、v2.3.4 等标签
  release:
    types: [published]  # 当发布被正式发布时触发（可选）

jobs:
  build:
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - name: Windows
            os: windows-latest
            qt_version: 6.8.0
            qt_arch: win64_msvc2022_64
            artifact_prefix: MoonlightPortable
          - name: macOS
            os: macos-latest
            qt_version: 6.6.0
            qt_arch: macos
            artifact_prefix: Moonlight
          - name: Linux
            os: ubuntu-20.04
            qt_version: 5.15.4
            artifact_prefix: Moonlight
          - name: Steam Link
            os: ubuntu-16.04
            artifact_prefix: Moonlight-SteamLink

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Get version from tag (if available)
        id: get_version
        run: |
          # 从标签提取版本号（如 v6.1.0 -> 6.1.0），若无标签则使用 version.txt
          if [[ "${{ github.ref_type }}" == "tag" && "${{ github.ref_name }}" =~ ^v ]]; then
            echo "VERSION=${{ github.ref_name#v }}" >> $GITHUB_ENV
          else
            echo "VERSION=$(cat app/version.txt)" >> $GITHUB_ENV
          fi
        shell: bash

      # 以下步骤与原配置一致（依赖安装、构建、上传产物）
      - name: Setup Windows dependencies
        if: matrix.platform.name == 'Windows'
        run: |
          choco install 7zip -y
          echo "PATH=$env:PATH;C:\Program Files\7-Zip" >> $env:GITHUB_ENV

      - name: Setup Qt (Windows/macOS)
        if: matrix.platform.name != 'Linux' && matrix.platform.name != 'Steam Link'
        uses: qt-actions/setup-qt@v3
        with:
          version: ${{ matrix.platform.qt_version }}
          arch: ${{ matrix.platform.qt_arch }}
          cache: true

      # 省略中间步骤（与原配置相同）...

      - name: Upload Windows artifacts
        if: matrix.platform.name == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.artifact_prefix }}-x64-${{ env.VERSION }}
          path: build/installer-x64-Release/*.zip

      # 其他平台的产物上传步骤...
